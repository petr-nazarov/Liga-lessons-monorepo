name: Before closing pull request
on:
  push:
    tags:
jobs:
  publish-server-artifacts:
    name: Publish server docker image to container registry
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      packages: write 
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: Setup Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version-file: '.nvmrc'
      # - name: Install global deps
      #   run: npm i -g yarn  typescript@4.9.5 @nestjs/cli@9.4.0

      # - name: cache
      #   id: cache-dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: '**/node_modules'
      #     key:  node_modules-${{ github.ref_name }}-${{ hashFiles('./yarn.lock') }}
      #     restore-keys: |
      #       node_modules-${{ github.ref_name  }}-
      #       node_modules-master-
      #       node_modules-main
      #       node_modules-

      # - name: Install dependencies
      #   if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true'  }}
      #   run: yarn 
          
      - name: Get current version of the package
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: ./apps/server

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u petr-nazarov --password-stdin
      # - name: 'Login to GitHub Container Registry'
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: petr-nazarov
      #     password: ${{secrets.GITHUB_TOKEN}}
      # - name: 'Login to GitHub Container Registry'
      #   run: |
      #     echo $CR_PAT | docker login ghcr.io -u petr-nazarov --password-stdin

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/petr-nazarov/liga-lessons-monorepo
          tags: |
            type=ref,event=branch
            type=raw,value=github-{{sha}}
            type=raw,value=v${{ steps.package-version.outputs.current-version }}
          flavor: |
            latest=true
            prefix=
            suffix=

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/server/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          provenance: false
          build-args: |
            APP=server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
