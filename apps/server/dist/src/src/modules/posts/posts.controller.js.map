{"version":3,"file":"posts.controller.js","sourceRoot":"","sources":["../../../../../src/modules/posts/posts.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAwE;AACxE,mDAA+C;AAC/C,iCAAsC;AACtC,6CAAyD;AAEzD,qEAAwD;AACxD,mDAA+C;AAKxC,IAAM,eAAe,GAArB,MAAM,eAAe;IAC1B,YAA6B,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;IAAG,CAAC;IAGpD,AAAN,KAAK,CAAC,gBAAgB;QACpB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC/C,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;IAC3C,CAAC;IAGK,AAAN,KAAK,CAAC,OAAO;QACX,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC/C,OAAO,KAAK,CAAC;IACf,CAAC;IAGK,AAAN,KAAK,CAAC,MAAM,CACF,aAA4B,EACvB,SAAqB;QAElC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACzC,GAAG,aAAa;YAChB,QAAQ,EAAE,SAAS,CAAC,GAAG;SACxB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAtBO;IADL,IAAA,YAAG,GAAE;;;;uDAIL;AAGK;IADL,IAAA,YAAG,GAAE;;;;8CAIL;AAGK;IADL,IAAA,aAAI,GAAE;IAEJ,WAAA,IAAA,aAAI,GAAE,CAAA;IACN,WAAA,IAAA,+BAAS,GAAE,CAAA;;qCADW,qBAAa;;6CAQrC;AAzBU,eAAe;IAJ3B,IAAA,mBAAU,EAAC,OAAO,CAAC;IACnB,IAAA,iBAAO,EAAC,OAAO,CAAC;IAChB,IAAA,uBAAa,EAAC,SAAS,CAAC;IACxB,IAAA,kBAAS,EAAC,sBAAS,CAAC;qCAEuB,4BAAY;GAD3C,eAAe,CA0B3B;AA1BY,0CAAe","sourcesContent":["import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { CreatePostDto } from 'types';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtPayload } from '../auth/jwt-payload.type';\nimport { Requestor } from '../auth/requestor.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\n@Controller('posts')\n@ApiTags('posts')\n@ApiBearerAuth('default')\n@UseGuards(AuthGuard)\nexport class PostsController {\n  constructor(private readonly postService: PostsService) {}\n\n  @Get()\n  async findAllModifined() {\n    const posts = await this.postService.findAll();\n    return { message: 'hello world', posts };\n  }\n\n  @Get()\n  async findAll() {\n    const posts = await this.postService.findAll();\n    return posts;\n  }\n\n  @Post()\n  async create(\n    @Body() createPostDto: CreatePostDto,\n    @Requestor() requestor: JwtPayload,\n  ) {\n    const post = await this.postService.create({\n      ...createPostDto,\n      authorId: requestor._id,\n    });\n    return post;\n  }\n}\n"]}