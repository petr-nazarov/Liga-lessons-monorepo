{"version":3,"file":"token.middleware.js","sourceRoot":"","sources":["../../../../../src/modules/auth/token.middleware.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAA4D;AAC5D,qCAAyC;AAMlC,IAAM,eAAe,6BAArB,MAAM,eAAe;IAC1B,YAA6B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IACvD,GAAG,CAAC,GAAQ,EAAE,GAAa,EAAE,IAAkB;QAC7C,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACjD,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE;YAClB,IAAI,EAAE,CAAC;YACP,OAAO;SACR;QACD,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,EAAE,CAAC;YACP,OAAO;SACR;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAa,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,EAAE,CAAC;YACP,OAAO;SACR;QAEA,GAAkC,CAAC,IAAI,GAAG,IAAI,CAAC;QAChD,IAAI,EAAE,CAAC;IACT,CAAC;CACF,CAAA;0BAvBY,eAAe;IAD3B,IAAA,mBAAU,GAAE;qCAE8B,gBAAU;GADxC,eAAe,CAuB3B","sourcesContent":["import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport { RequestWithUser } from './request.type';\nimport { JwtPayload } from './jwt-payload.type';\n\n@Injectable()\nexport class TokenMiddleware implements NestMiddleware {\n  constructor(private readonly jwtService: JwtService) {}\n  use(req: any, res: Response, next: NextFunction) {\n    const bearerToken = req.headers['authorization'];\n    if (!(bearerToken)) {\n      next();\n      return;\n    }\n    const token = bearerToken.split(' ')[1];\n    if (!token) {\n      next();\n      return;\n    }\n\n    const user = this.jwtService.verify<JwtPayload>(token);\n    if (!user) {\n      next();\n      return;\n    }\n\n    (req as unknown as RequestWithUser).user = user;\n    next();\n  }\n}\n"]}